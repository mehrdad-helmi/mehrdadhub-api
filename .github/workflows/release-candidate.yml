name: Backend Release Candidate

on:
  push:
    branches:
      - release-*

jobs:
  change-check:
    runs-on: ubuntu-latest
    outputs: 
      hasChangeset: ${{ steps.set-output.hasChangeset }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: GitHub Action for npx
        uses: mikeal/npx@1.0.0
      
      - name: Get changeset status
        id: changeset-status
        run: npx changeset status
        continue-on-error: true

      - name: Set output if changeset status failed
        id: set-output
        run: |
          if [[ $? -eq 1 ]]; then
            echo "hasChangeset=false" >> "$GITHUB_OUTPUT"
          else
            echo "hasChangeset=true" >> "$GITHUB_OUTPUT"
          fi
      
  build-and-publish:
    runs-on: ubuntu-latest
    needs: change-check
    if: needs.change-check.outputs.hasChangeset == 'true'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: GitHub Action for npx
        uses: mikeal/npx@1.0.0
      
      - name: Version Bump
        run: npx changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and publish a changeset
        uses: EndBug/add-and-commit@v9
        with:
          author_name: "GithubAction"
          author_email: "mehrdad.redhat@gmail.com"
          message: "auto: Version bumped by GitHub action"
          push: origin ${{ github.ref }}

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(npm pkg get version --workspaces=false | tr -d '\"')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t mehrdadhub-api:${{ env.VERSION }} .

      - name: Log in to Docker Repository
        run: echo ${{ secrets.DOCKER_REPO_ACCESS_TOKEN }} | docker login ${{ vars.DOCKER_REPO_HOST }} -u ${{ secrets.DOCKER_REPO_USERNAME }} --password-stdin

      - name: Tag Docker image
        run: docker tag mehrdadhub-api:${{ env.VERSION }} ${{ vars.DOCKER_REPO_HOST }}/mehrdadhub-api:${{ env.VERSION }}

      - name: Push Docker image to registry
        run: docker push ${{ vars.DOCKER_REPO_HOST }}/mehrdadhub-api:${{ env.VERSION }}

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Staging
        env:
          HOSTNAME: ${{secrets.SERVER_SSH_HOST}}
          USER_NAME: ${{secrets.SERVER_USER_NAME}}
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${USER_NAME}@${HOSTNAME} 'cd app/staging/api && BACKEND_VERSION=${{ env.VERSION }} docker compose pull && BACKEND_VERSION=${{ env.VERSION }} docker compose up -d'

      - uses: iarekylew00t/crane-installer@v1
      - name: Change Remote Image Tag to -rc
        run: crane tag ${{ vars.DOCKER_REPO_HOST }}/mehrdadhub-api:${{ env.VERSION }} ${{ env.VERSION }}-rc && crane delete ${{ vars.DOCKER_REPO_HOST }}/mehrdadhub-api:${{ env.VERSION }}
  
  change-remote-tag:
    runs-on: ubuntu-latest
    needs: [build-and-publish,change-check]
    if: needs.change-check.outputs.hasChangeset == 'false'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(npm pkg get version --workspaces=false | tr -d '\"')" >> $GITHUB_ENV
        
      - uses: iarekylew00t/crane-installer@v1      
      - name: Add -rc to Remote Image Tag
        run: echo ${{ secrets.DOCKER_REPO_ACCESS_TOKEN }} | crane auth login ${{ vars.DOCKER_REPO_HOST }} --username "${{ secrets.DOCKER_REPO_USERNAME }}" --password-stdin \
          crane tag ${{ vars.DOCKER_REPO_HOST }}/mehrdadhub-api:${{ env.VERSION }}-beta ${{ env.VERSION }}-rc
