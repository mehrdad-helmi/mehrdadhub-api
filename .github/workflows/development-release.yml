name: Backend Develop Deployment

on:
  push:
    branches:
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mehrdadhub-api

jobs:
  change-check:
    runs-on: ubuntu-latest
    outputs:
      hasChangeset: ${{ steps.check-md-files.outputs.hasChangeset }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Check for existing changesets
        id: check-md-files
        run: |
            md_files=$(find .changeset -name '*.md' ! -name 'README.md')
            if [ -z "$md_files" ]; then
              echo "No changeset files found."
              echo "hasChangeset=no" >> "$GITHUB_OUTPUT"
            else
              echo "Found changeset files:"
              echo "$md_files"
              echo "hasChangeset=yes" >> "$GITHUB_OUTPUT"
            fi
          
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: change-check
    if: needs.change-check.outputs.hasChangeset == 'yes'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install changeset
        run: npm ci --include "dev"

      - name: Version Bump
        run: npx changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and publish a changeset
        uses: EndBug/add-and-commit@v9
        with:
          author_name: "GithubAction"
          author_email: "mehrdad.redhat@gmail.com"
          message: "auto: Version bumped by GitHub action"
          push: origin ${{ github.ref }}

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(npm pkg get version --workspaces=false | tr -d '\"')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      * name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Staging
        env:
          HOSTNAME: ${{secrets.SERVER_SSH_HOST}}
          USER_NAME: ${{secrets.SERVER_USER_NAME}}
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${USER_NAME}@${HOSTNAME} 'cd app/staging/api && BACKEND_VERSION=${{ env.VERSION }} docker compose pull && BACKEND_VERSION=${{ env.VERSION }} docker compose up -d'

      - uses: iarekylew00t/crane-installer@v1
      - name: Change Remote Image Tag to -beta
        run: crane tag ${{ env.REGISTRY }}/mehrdadhub-api:${{ env.VERSION }} ${{ env.VERSION }}-beta && crane delete ${{ env.REGISTRY }}/mehrdadhub-api:${{ env.VERSION }}
