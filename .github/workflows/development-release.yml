name: Backend Develop Deployment

on:
  push:
    branches:
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mehrdadhub-api

jobs:
  change-check:
    runs-on: ubuntu-latest
    outputs:
      hasChangeset: ${{ steps.set-output.hasChangeset }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install changeset
        run: npm install changeset -D

      - name: Get changeset status
        id: changeset-status
        run: |
          changeset status
        continue-on-error: true

      - name: Set output if changeset status failed
        id: set-output
        run: |
          if [[ $? -eq 1 ]]; then
            echo "false" >> "$GITHUB_OUTPUT"
          else
            echo "true" >> "$GITHUB_OUTPUT"
          fi
          
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: change-check
    if: needs.change-check.outputs.hasChangeset == 'true'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install changeset
        run: npm install changeset -D

      - name: Version Bump
        run: changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and publish a changeset
        uses: EndBug/add-and-commit@v9
        with:
          author_name: "GithubAction"
          author_email: "mehrdad.redhat@gmail.com"
          message: "auto: Version bumped by GitHub action"
          push: origin ${{ github.ref }}

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(npm pkg get version --workspaces=false | tr -d '\"')" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t mehrdadhub-api:${{ env.VERSION }} .

      - name: Log in to Docker Repository
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Tag Docker image
        run: docker tag mehrdadhub-api:${{ env.VERSION }} ${{ env.REGISTRY }}/mehrdadhub-api:${{ env.VERSION }}

      - name: Push Docker image to registry
        run: docker push ${{ env.REGISTRY }}/mehrdadhub-api:${{ env.VERSION }}

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Staging
        env:
          HOSTNAME: ${{secrets.SERVER_SSH_HOST}}
          USER_NAME: ${{secrets.SERVER_USER_NAME}}
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${USER_NAME}@${HOSTNAME} 'cd app/staging/api && BACKEND_VERSION=${{ env.VERSION }} docker compose pull && BACKEND_VERSION=${{ env.VERSION }} docker compose up -d'

      - uses: iarekylew00t/crane-installer@v1
      - name: Change Remote Image Tag to -beta
        run: crane tag ${{ env.REGISTRY }}/mehrdadhub-api:${{ env.VERSION }} ${{ env.VERSION }}-beta && crane delete ${{ env.REGISTRY }}/mehrdadhub-api:${{ env.VERSION }}
